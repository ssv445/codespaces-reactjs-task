version: "3"

# # override the default network

services:
  app:
    build:
      context: .
      dockerfile: nodejs/Dockerfile
      args:
        # Update 'VARIANT' to pick an LTS version of Node.js: 16, 14, 12.
        # Append -bullseye or -buster to pin to an OS version.
        # Use -bullseye variants on local arm64/Apple Silicon.
        VARIANT: 14-bullseye

    container_name: nodejs_api
    volumes:
      - ..:/workspace:cached
      - ~/.ssh:/home/node/.ssh:ro
      - vscode-ext:/root/.vscode-server/extensions
      - vscode-ext-insider:/root/.vscode-server-insiders/extensions
      - local_nodejs_api_node_modules:/workspace/nodejs_api/node_modules
      - local_vuejs_node_modules:/workspace/vuejs/node_modules
      - local_release_data:/workspace/release/
      - local_node_modules:/workspace/node_modules

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    working_dir: /workspace/nodejs_api
    entrypoint: ["tail", "-f", "package.json"]
    expose:
      - "2122"
      - "8063"
    # Uncomment the next line to use a non-root user for all processes.
    # user: node

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

    # Add "forwardPorts": ["27017"] to **devcontainer.json** to forward MongoDB locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    depends_on:
      - db

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    #network_mode: service:db
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: db
      ME_CONFIG_MONGODB_PORT: "27017"

  db:
    image: mongo:5
    container_name: mongo_5
    restart: unless-stopped
    volumes:
      - mongodb-data:/data/db
      - ./db/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

    expose:
      - "27017"
    # Uncomment to change startup options
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: ecomitram

    # Run the caddy server
  caddy:
    image: caddy/caddy:2.2.1-alpine
    container_name: caddy-service
    restart: unless-stopped
    ports:
      - "80:80"

    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./caddy/site:/srv
      - caddy_data:/data
      - caddy_config:/config

  redis:
    image: redis:5-alpine
    container_name: redis
    restart: unless-stopped
    volumes:
      - "redis_data:/data"
    expose:
      - 6379

volumes:
  redis_data:
  caddy_data:
  caddy_config:
  mongodb-data:
  vscode-ext:
  vscode-ext-insider:
  local_node_modules:
  local_nodejs_api_node_modules:
  local_vuejs_node_modules:
  local_release_data:

